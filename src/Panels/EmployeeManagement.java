/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import Classes.Application;
import Classes.EXTCLASS;
import Pojos.Employee;
import Pojos.EmployeeType;
import Pojos.MyCompanyDetails;
import Pojos.Privileges;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.SoftBevelBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;
import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Transaction;
import org.hibernate.criterion.Restrictions;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Sheha
 */
public class EmployeeManagement extends javax.swing.JPanel {

    private String qr;
    private String imgpath;

    private boolean isUpdateable;

    private Employee employee;

    private Criteria c = EXTCLASS.getHibSession().createCriteria(Employee.class);

    private int selectedRow;

    public EmployeeManagement() {
        initComponents();
        changeLangu();
        loadEmpType();

        empAllList.getTableHeader().setDefaultRenderer(new Sup_VenManagement.HeaderColor());

        jTabbedPane1.setIconAt(0, new ImageIcon(getClass().getResource("/Img/Plus_25px.png")));
        jTabbedPane1.setIconAt(1, new ImageIcon(getClass().getResource("/Img/List_25px.png")));

        loadEmpTbl(c);
        clearFields();
        AutoCompleteDecorator.decorate(emp_typeList);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        emp_un = new javax.swing.JTextField();
        jLabel_1_6 = new javax.swing.JLabel();
        jLabel_1_7 = new javax.swing.JLabel();
        emp_mob = new javax.swing.JTextField();
        jLabel_1_9 = new javax.swing.JLabel();
        emp_email = new javax.swing.JTextField();
        jLabel_1_3 = new javax.swing.JLabel();
        emp_typeList = new javax.swing.JComboBox<>();
        emp_imgUpload1 = new javax.swing.JLabel();
        jLabel_1_1 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        emp_img = new javax.swing.JLabel();
        jLabel_1_4 = new javax.swing.JLabel();
        emp_company = new javax.swing.JTextField();
        emp_name = new javax.swing.JTextField();
        emp_password = new javax.swing.JPasswordField();
        emp_passShow = new javax.swing.JCheckBox();
        jLabel_1_8 = new javax.swing.JLabel();
        jLabel_1_5 = new javax.swing.JLabel();
        emp_btnAddEmpType = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel_1_10 = new javax.swing.JLabel();
        stock = new javax.swing.JCheckBox();
        i1 = new javax.swing.JLabel();
        stock_i = new javax.swing.JCheckBox();
        u1 = new javax.swing.JLabel();
        stock_u = new javax.swing.JCheckBox();
        s1 = new javax.swing.JLabel();
        stock_s = new javax.swing.JCheckBox();
        jLabel_1_13 = new javax.swing.JLabel();
        product = new javax.swing.JCheckBox();
        jLabel_1_12 = new javax.swing.JLabel();
        unit = new javax.swing.JCheckBox();
        jLabel_1_14 = new javax.swing.JLabel();
        product_type = new javax.swing.JCheckBox();
        jLabel_1_11 = new javax.swing.JLabel();
        grn = new javax.swing.JCheckBox();
        i2 = new javax.swing.JLabel();
        u2 = new javax.swing.JLabel();
        s2 = new javax.swing.JLabel();
        grn_s = new javax.swing.JCheckBox();
        grn_u = new javax.swing.JCheckBox();
        grn_i = new javax.swing.JCheckBox();
        i3 = new javax.swing.JLabel();
        u3 = new javax.swing.JLabel();
        s3 = new javax.swing.JLabel();
        unit_s = new javax.swing.JCheckBox();
        unit_u = new javax.swing.JCheckBox();
        unit_i = new javax.swing.JCheckBox();
        i4 = new javax.swing.JLabel();
        u4 = new javax.swing.JLabel();
        s4 = new javax.swing.JLabel();
        product_s = new javax.swing.JCheckBox();
        product_u = new javax.swing.JCheckBox();
        product_i = new javax.swing.JCheckBox();
        i5 = new javax.swing.JLabel();
        u5 = new javax.swing.JLabel();
        s5 = new javax.swing.JLabel();
        product_type_s = new javax.swing.JCheckBox();
        product_type_u = new javax.swing.JCheckBox();
        product_type_i = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel_1_16 = new javax.swing.JLabel();
        vendor = new javax.swing.JCheckBox();
        jLabel_1_15 = new javax.swing.JLabel();
        company = new javax.swing.JCheckBox();
        jLabel_1_17 = new javax.swing.JLabel();
        supplier = new javax.swing.JCheckBox();
        s6 = new javax.swing.JLabel();
        company_s = new javax.swing.JCheckBox();
        u6 = new javax.swing.JLabel();
        company_u = new javax.swing.JCheckBox();
        i6 = new javax.swing.JLabel();
        company_i = new javax.swing.JCheckBox();
        vendor_i = new javax.swing.JCheckBox();
        i7 = new javax.swing.JLabel();
        s7 = new javax.swing.JLabel();
        vendor_u = new javax.swing.JCheckBox();
        vendor_s = new javax.swing.JCheckBox();
        u7 = new javax.swing.JLabel();
        supplier_i = new javax.swing.JCheckBox();
        i8 = new javax.swing.JLabel();
        s8 = new javax.swing.JLabel();
        supplier_u = new javax.swing.JCheckBox();
        supplier_s = new javax.swing.JCheckBox();
        u8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel_1_19 = new javax.swing.JLabel();
        customer_POS = new javax.swing.JCheckBox();
        jLabel_1_18 = new javax.swing.JLabel();
        vendor_POS = new javax.swing.JCheckBox();
        jLabel_1_20 = new javax.swing.JLabel();
        vendor_return = new javax.swing.JCheckBox();
        jLabel_1_21 = new javax.swing.JLabel();
        customer_return = new javax.swing.JCheckBox();
        vendor_POS_i = new javax.swing.JCheckBox();
        i9 = new javax.swing.JLabel();
        u9 = new javax.swing.JLabel();
        vendor_POS_u = new javax.swing.JCheckBox();
        s9 = new javax.swing.JLabel();
        vendor_POS_s = new javax.swing.JCheckBox();
        customer_POS_i = new javax.swing.JCheckBox();
        i10 = new javax.swing.JLabel();
        u10 = new javax.swing.JLabel();
        customer_POS_u = new javax.swing.JCheckBox();
        s10 = new javax.swing.JLabel();
        customer_POS_s = new javax.swing.JCheckBox();
        u11 = new javax.swing.JLabel();
        vendor_return_s = new javax.swing.JCheckBox();
        vendor_return_i = new javax.swing.JCheckBox();
        s11 = new javax.swing.JLabel();
        i11 = new javax.swing.JLabel();
        vendor_return_u = new javax.swing.JCheckBox();
        u12 = new javax.swing.JLabel();
        customer_return_u = new javax.swing.JCheckBox();
        i12 = new javax.swing.JLabel();
        customer_return_s = new javax.swing.JCheckBox();
        customer_return_i = new javax.swing.JCheckBox();
        s12 = new javax.swing.JLabel();
        emp_btnSave = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        emp_btnClear = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empAllList = new javax.swing.JTable();
        emp_btnUpdate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        emp_btnSetActive = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel_1_23 = new javax.swing.JLabel();
        emp_findInactive = new javax.swing.JRadioButton();
        emp_findAll = new javax.swing.JRadioButton();
        emp_findActive = new javax.swing.JRadioButton();
        emp_findByNameId = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        emp_img1 = new javax.swing.JLabel();
        jLabel_1_22 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        emp_qr = new javax.swing.JLabel();
        jLabel_1_2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(79, 51, 81));
        jTabbedPane1.setForeground(new java.awt.Color(79, 51, 81));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setFocusable(false);
        jTabbedPane1.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N

        jPanel9.setBackground(new java.awt.Color(68, 50, 72));
        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel14.setBackground(new java.awt.Color(79, 51, 81));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "DETAILS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Iskoola Pota", 1, 19), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emp_un.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_un.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.add(emp_un, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 500, 260, -1));

        jLabel_1_6.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_6.setText("Username");
        jPanel14.add(jLabel_1_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 470, -1, -1));

        jLabel_1_7.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_7.setText("Mobile NO");
        jPanel14.add(jLabel_1_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 540, -1, -1));

        emp_mob.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_mob.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        emp_mob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emp_mobKeyTyped(evt);
            }
        });
        jPanel14.add(emp_mob, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 570, 530, -1));

        jLabel_1_9.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_9.setText("Password");
        jPanel14.add(jLabel_1_9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 680, -1, -1));

        emp_email.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_email.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.add(emp_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 640, 530, -1));

        jLabel_1_3.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_3.setText("Employee Type");
        jPanel14.add(jLabel_1_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, -1, -1));

        emp_typeList.setEditable(true);
        emp_typeList.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_typeList.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        emp_typeList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emp_typeListKeyReleased(evt);
            }
        });
        jPanel14.add(emp_typeList, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 470, -1));

        emp_imgUpload1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btn_upload.png"))); // NOI18N
        emp_imgUpload1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_imgUpload1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_imgUpload1MouseClicked(evt);
            }
        });
        jPanel14.add(emp_imgUpload1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 80, 60));

        jLabel_1_1.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_1.setText("Image");
        jPanel14.add(jLabel_1_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        jPanel15.setBackground(new java.awt.Color(79, 51, 81));
        jPanel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emp_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_imgMouseClicked(evt);
            }
        });
        jPanel15.add(emp_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 200));

        jPanel14.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 70, 200, 200));

        jLabel_1_4.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_4.setText("Company");
        jPanel14.add(jLabel_1_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, -1));

        emp_company.setEditable(false);
        emp_company.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_company.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.add(emp_company, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, 530, -1));

        emp_name.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        emp_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emp_nameKeyTyped(evt);
            }
        });
        jPanel14.add(emp_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 260, -1));

        emp_password.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.add(emp_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 710, 460, -1));

        emp_passShow.setBackground(new java.awt.Color(79, 51, 81));
        emp_passShow.setFont(new java.awt.Font("Nirmala UI", 0, 15)); // NOI18N
        emp_passShow.setForeground(new java.awt.Color(255, 255, 255));
        emp_passShow.setText("Show");
        emp_passShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emp_passShowActionPerformed(evt);
            }
        });
        jPanel14.add(emp_passShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 710, -1, -1));

        jLabel_1_8.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_8.setText("Email");
        jPanel14.add(jLabel_1_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 610, -1, -1));

        jLabel_1_5.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_5.setText("Full Name");
        jPanel14.add(jLabel_1_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, -1, -1));

        emp_btnAddEmpType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btn_add.png"))); // NOI18N
        emp_btnAddEmpType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_btnAddEmpType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_btnAddEmpTypeMouseClicked(evt);
            }
        });
        jPanel14.add(emp_btnAddEmpType, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 60, 60));

        jPanel9.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 700, 780));

        jPanel11.setBackground(new java.awt.Color(79, 51, 81));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "PRIVILAGES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Iskoola Pota", 1, 19), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(79, 51, 81));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Stock Management", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Nirmala UI", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_1_10.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_10.setText("Stock");
        jPanel5.add(jLabel_1_10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, 30));

        stock.setBackground(new java.awt.Color(79, 51, 81));
        stock.setSelected(true);
        stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockActionPerformed(evt);
            }
        });
        jPanel5.add(stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, 30));

        i1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i1.setForeground(new java.awt.Color(255, 255, 255));
        i1.setText("Insert");
        jPanel5.add(i1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, 30));

        stock_i.setBackground(new java.awt.Color(79, 51, 81));
        stock_i.setSelected(true);
        stock_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_iActionPerformed(evt);
            }
        });
        jPanel5.add(stock_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 30));

        u1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u1.setForeground(new java.awt.Color(255, 255, 255));
        u1.setText("Update");
        jPanel5.add(u1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, 30));

        stock_u.setBackground(new java.awt.Color(79, 51, 81));
        stock_u.setSelected(true);
        stock_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_uActionPerformed(evt);
            }
        });
        jPanel5.add(stock_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 30));

        s1.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s1.setForeground(new java.awt.Color(255, 255, 255));
        s1.setText("Search");
        jPanel5.add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, 30));

        stock_s.setBackground(new java.awt.Color(79, 51, 81));
        stock_s.setSelected(true);
        stock_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_sActionPerformed(evt);
            }
        });
        jPanel5.add(stock_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, 30));

        jLabel_1_13.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_13.setText("Product");
        jPanel5.add(jLabel_1_13, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, -1, 30));

        product.setBackground(new java.awt.Color(79, 51, 81));
        product.setSelected(true);
        product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productActionPerformed(evt);
            }
        });
        jPanel5.add(product, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, 30));

        jLabel_1_12.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_12.setText("Unit");
        jPanel5.add(jLabel_1_12, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, 30));

        unit.setBackground(new java.awt.Color(79, 51, 81));
        unit.setSelected(true);
        unit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitActionPerformed(evt);
            }
        });
        jPanel5.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, -1, 30));

        jLabel_1_14.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_14.setText("Product Type");
        jPanel5.add(jLabel_1_14, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 30, -1, 30));

        product_type.setBackground(new java.awt.Color(79, 51, 81));
        product_type.setSelected(true);
        product_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_typeActionPerformed(evt);
            }
        });
        jPanel5.add(product_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, -1, 30));

        jLabel_1_11.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_11.setText("GRN");
        jPanel5.add(jLabel_1_11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, 30));

        grn.setBackground(new java.awt.Color(79, 51, 81));
        grn.setSelected(true);
        grn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grnActionPerformed(evt);
            }
        });
        jPanel5.add(grn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, 30));

        i2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i2.setForeground(new java.awt.Color(255, 255, 255));
        i2.setText("Insert");
        jPanel5.add(i2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, -1, 30));

        u2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u2.setForeground(new java.awt.Color(255, 255, 255));
        u2.setText("Update");
        jPanel5.add(u2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, 30));

        s2.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s2.setForeground(new java.awt.Color(255, 255, 255));
        s2.setText("Search");
        jPanel5.add(s2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, 30));

        grn_s.setBackground(new java.awt.Color(79, 51, 81));
        grn_s.setSelected(true);
        grn_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_sActionPerformed(evt);
            }
        });
        jPanel5.add(grn_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, -1, 30));

        grn_u.setBackground(new java.awt.Color(79, 51, 81));
        grn_u.setSelected(true);
        grn_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_uActionPerformed(evt);
            }
        });
        jPanel5.add(grn_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, -1, 30));

        grn_i.setBackground(new java.awt.Color(79, 51, 81));
        grn_i.setSelected(true);
        grn_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grn_iActionPerformed(evt);
            }
        });
        jPanel5.add(grn_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, -1, 30));

        i3.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i3.setForeground(new java.awt.Color(255, 255, 255));
        i3.setText("Insert");
        jPanel5.add(i3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, 30));

        u3.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u3.setForeground(new java.awt.Color(255, 255, 255));
        u3.setText("Update");
        jPanel5.add(u3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 100, -1, 30));

        s3.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s3.setForeground(new java.awt.Color(255, 255, 255));
        s3.setText("Search");
        jPanel5.add(s3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, 30));

        unit_s.setBackground(new java.awt.Color(79, 51, 81));
        unit_s.setSelected(true);
        unit_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unit_sActionPerformed(evt);
            }
        });
        jPanel5.add(unit_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, 30));

        unit_u.setBackground(new java.awt.Color(79, 51, 81));
        unit_u.setSelected(true);
        unit_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unit_uActionPerformed(evt);
            }
        });
        jPanel5.add(unit_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, 30));

        unit_i.setBackground(new java.awt.Color(79, 51, 81));
        unit_i.setSelected(true);
        unit_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unit_iActionPerformed(evt);
            }
        });
        jPanel5.add(unit_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, -1, 30));

        i4.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i4.setForeground(new java.awt.Color(255, 255, 255));
        i4.setText("Insert");
        jPanel5.add(i4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, -1, 30));

        u4.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u4.setForeground(new java.awt.Color(255, 255, 255));
        u4.setText("Update");
        jPanel5.add(u4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, -1, 30));

        s4.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s4.setForeground(new java.awt.Color(255, 255, 255));
        s4.setText("Search");
        jPanel5.add(s4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, -1, 30));

        product_s.setBackground(new java.awt.Color(79, 51, 81));
        product_s.setSelected(true);
        product_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_sActionPerformed(evt);
            }
        });
        jPanel5.add(product_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, -1, 30));

        product_u.setBackground(new java.awt.Color(79, 51, 81));
        product_u.setSelected(true);
        product_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_uActionPerformed(evt);
            }
        });
        jPanel5.add(product_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, -1, 30));

        product_i.setBackground(new java.awt.Color(79, 51, 81));
        product_i.setSelected(true);
        product_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_iActionPerformed(evt);
            }
        });
        jPanel5.add(product_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, -1, 30));

        i5.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i5.setForeground(new java.awt.Color(255, 255, 255));
        i5.setText("Insert");
        jPanel5.add(i5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, -1, 30));

        u5.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u5.setForeground(new java.awt.Color(255, 255, 255));
        u5.setText("Update");
        jPanel5.add(u5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, 30));

        s5.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s5.setForeground(new java.awt.Color(255, 255, 255));
        s5.setText("Search");
        jPanel5.add(s5, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, -1, 30));

        product_type_s.setBackground(new java.awt.Color(79, 51, 81));
        product_type_s.setSelected(true);
        product_type_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_type_sActionPerformed(evt);
            }
        });
        jPanel5.add(product_type_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, -1, 30));

        product_type_u.setBackground(new java.awt.Color(79, 51, 81));
        product_type_u.setSelected(true);
        product_type_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_type_uActionPerformed(evt);
            }
        });
        jPanel5.add(product_type_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, -1, 30));

        product_type_i.setBackground(new java.awt.Color(79, 51, 81));
        product_type_i.setSelected(true);
        product_type_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_type_iActionPerformed(evt);
            }
        });
        jPanel5.add(product_type_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, -1, 30));

        jPanel11.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 740, 190));

        jPanel6.setBackground(new java.awt.Color(79, 51, 81));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Supplier Management", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Nirmala UI", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_1_16.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_16.setText("Vendor");
        jPanel6.add(jLabel_1_16, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, 30));

        vendor.setBackground(new java.awt.Color(79, 51, 81));
        vendor.setSelected(true);
        vendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorActionPerformed(evt);
            }
        });
        jPanel6.add(vendor, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, -1, 30));

        jLabel_1_15.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_15.setText("Company");
        jPanel6.add(jLabel_1_15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, 30));

        company.setBackground(new java.awt.Color(79, 51, 81));
        company.setSelected(true);
        company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyActionPerformed(evt);
            }
        });
        jPanel6.add(company, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, 30));

        jLabel_1_17.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_17.setText("Supplier");
        jPanel6.add(jLabel_1_17, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, 30));

        supplier.setBackground(new java.awt.Color(79, 51, 81));
        supplier.setSelected(true);
        supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierActionPerformed(evt);
            }
        });
        jPanel6.add(supplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 30, -1, 30));

        s6.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s6.setForeground(new java.awt.Color(255, 255, 255));
        s6.setText("Search");
        jPanel6.add(s6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, 30));

        company_s.setBackground(new java.awt.Color(79, 51, 81));
        company_s.setSelected(true);
        company_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                company_sActionPerformed(evt);
            }
        });
        jPanel6.add(company_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, 30));

        u6.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u6.setForeground(new java.awt.Color(255, 255, 255));
        u6.setText("Update");
        jPanel6.add(u6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, 30));

        company_u.setBackground(new java.awt.Color(79, 51, 81));
        company_u.setSelected(true);
        company_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                company_uActionPerformed(evt);
            }
        });
        jPanel6.add(company_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 30));

        i6.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i6.setForeground(new java.awt.Color(255, 255, 255));
        i6.setText("Insert");
        jPanel6.add(i6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, 30));

        company_i.setBackground(new java.awt.Color(79, 51, 81));
        company_i.setSelected(true);
        company_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                company_iActionPerformed(evt);
            }
        });
        jPanel6.add(company_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, 30));

        vendor_i.setBackground(new java.awt.Color(79, 51, 81));
        vendor_i.setSelected(true);
        vendor_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_iActionPerformed(evt);
            }
        });
        jPanel6.add(vendor_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, -1, 30));

        i7.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i7.setForeground(new java.awt.Color(255, 255, 255));
        i7.setText("Insert");
        jPanel6.add(i7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, -1, 30));

        s7.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s7.setForeground(new java.awt.Color(255, 255, 255));
        s7.setText("Search");
        jPanel6.add(s7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, -1, 30));

        vendor_u.setBackground(new java.awt.Color(79, 51, 81));
        vendor_u.setSelected(true);
        vendor_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_uActionPerformed(evt);
            }
        });
        jPanel6.add(vendor_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, -1, 30));

        vendor_s.setBackground(new java.awt.Color(79, 51, 81));
        vendor_s.setSelected(true);
        vendor_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_sActionPerformed(evt);
            }
        });
        jPanel6.add(vendor_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, -1, 30));

        u7.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u7.setForeground(new java.awt.Color(255, 255, 255));
        u7.setText("Update");
        jPanel6.add(u7, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, -1, 30));

        supplier_i.setBackground(new java.awt.Color(79, 51, 81));
        supplier_i.setSelected(true);
        supplier_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_iActionPerformed(evt);
            }
        });
        jPanel6.add(supplier_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, -1, 30));

        i8.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i8.setForeground(new java.awt.Color(255, 255, 255));
        i8.setText("Insert");
        jPanel6.add(i8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, -1, 30));

        s8.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s8.setForeground(new java.awt.Color(255, 255, 255));
        s8.setText("Search");
        jPanel6.add(s8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, -1, 30));

        supplier_u.setBackground(new java.awt.Color(79, 51, 81));
        supplier_u.setSelected(true);
        supplier_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_uActionPerformed(evt);
            }
        });
        jPanel6.add(supplier_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, -1, 30));

        supplier_s.setBackground(new java.awt.Color(79, 51, 81));
        supplier_s.setSelected(true);
        supplier_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_sActionPerformed(evt);
            }
        });
        jPanel6.add(supplier_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, -1, 30));

        u8.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u8.setForeground(new java.awt.Color(255, 255, 255));
        u8.setText("Update");
        jPanel6.add(u8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, -1, 30));

        jPanel11.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 740, 190));

        jPanel7.setBackground(new java.awt.Color(79, 51, 81));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Sales Management", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Nirmala UI", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel7.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_1_19.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_19.setText("Customer POS");
        jPanel7.add(jLabel_1_19, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, -1, 30));

        customer_POS.setBackground(new java.awt.Color(79, 51, 81));
        customer_POS.setSelected(true);
        customer_POS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_POSActionPerformed(evt);
            }
        });
        jPanel7.add(customer_POS, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, 30));

        jLabel_1_18.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_18.setText("Vendor POS");
        jPanel7.add(jLabel_1_18, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, 30));

        vendor_POS.setBackground(new java.awt.Color(79, 51, 81));
        vendor_POS.setSelected(true);
        vendor_POS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_POSActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_POS, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 30));

        jLabel_1_20.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_20.setText("Vendor Return");
        jPanel7.add(jLabel_1_20, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, -1, 30));

        vendor_return.setBackground(new java.awt.Color(79, 51, 81));
        vendor_return.setSelected(true);
        vendor_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_returnActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_return, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, 30));

        jLabel_1_21.setFont(new java.awt.Font("Nirmala UI", 1, 15)); // NOI18N
        jLabel_1_21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_21.setText("Customer Return");
        jPanel7.add(jLabel_1_21, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, -1, 30));

        customer_return.setBackground(new java.awt.Color(79, 51, 81));
        customer_return.setSelected(true);
        customer_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_returnActionPerformed(evt);
            }
        });
        jPanel7.add(customer_return, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, -1, 30));

        vendor_POS_i.setBackground(new java.awt.Color(79, 51, 81));
        vendor_POS_i.setSelected(true);
        vendor_POS_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_POS_iActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_POS_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 30));

        i9.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i9.setForeground(new java.awt.Color(255, 255, 255));
        i9.setText("Insert");
        jPanel7.add(i9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, 30));

        u9.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u9.setForeground(new java.awt.Color(255, 255, 255));
        u9.setText("Update");
        jPanel7.add(u9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, 30));

        vendor_POS_u.setBackground(new java.awt.Color(79, 51, 81));
        vendor_POS_u.setSelected(true);
        vendor_POS_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_POS_uActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_POS_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 30));

        s9.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s9.setForeground(new java.awt.Color(255, 255, 255));
        s9.setText("Search");
        jPanel7.add(s9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, 30));

        vendor_POS_s.setBackground(new java.awt.Color(79, 51, 81));
        vendor_POS_s.setSelected(true);
        vendor_POS_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_POS_sActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_POS_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 30));

        customer_POS_i.setBackground(new java.awt.Color(79, 51, 81));
        customer_POS_i.setSelected(true);
        customer_POS_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_POS_iActionPerformed(evt);
            }
        });
        jPanel7.add(customer_POS_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, 30));

        i10.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i10.setForeground(new java.awt.Color(255, 255, 255));
        i10.setText("Insert");
        jPanel7.add(i10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, 30));

        u10.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u10.setForeground(new java.awt.Color(255, 255, 255));
        u10.setText("Update");
        jPanel7.add(u10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, -1, 30));

        customer_POS_u.setBackground(new java.awt.Color(79, 51, 81));
        customer_POS_u.setSelected(true);
        customer_POS_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_POS_uActionPerformed(evt);
            }
        });
        jPanel7.add(customer_POS_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, -1, 30));

        s10.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s10.setForeground(new java.awt.Color(255, 255, 255));
        s10.setText("Search");
        jPanel7.add(s10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, -1, 30));

        customer_POS_s.setBackground(new java.awt.Color(79, 51, 81));
        customer_POS_s.setSelected(true);
        customer_POS_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_POS_sActionPerformed(evt);
            }
        });
        jPanel7.add(customer_POS_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, 30));

        u11.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u11.setForeground(new java.awt.Color(255, 255, 255));
        u11.setText("Update");
        jPanel7.add(u11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, 30));

        vendor_return_s.setBackground(new java.awt.Color(79, 51, 81));
        vendor_return_s.setSelected(true);
        vendor_return_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_return_sActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_return_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, -1, 30));

        vendor_return_i.setBackground(new java.awt.Color(79, 51, 81));
        vendor_return_i.setSelected(true);
        vendor_return_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_return_iActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_return_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, -1, 30));

        s11.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s11.setForeground(new java.awt.Color(255, 255, 255));
        s11.setText("Search");
        jPanel7.add(s11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, -1, 30));

        i11.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i11.setForeground(new java.awt.Color(255, 255, 255));
        i11.setText("Insert");
        jPanel7.add(i11, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, 30));

        vendor_return_u.setBackground(new java.awt.Color(79, 51, 81));
        vendor_return_u.setSelected(true);
        vendor_return_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendor_return_uActionPerformed(evt);
            }
        });
        jPanel7.add(vendor_return_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, -1, 30));

        u12.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        u12.setForeground(new java.awt.Color(255, 255, 255));
        u12.setText("Update");
        jPanel7.add(u12, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, -1, 30));

        customer_return_u.setBackground(new java.awt.Color(79, 51, 81));
        customer_return_u.setSelected(true);
        customer_return_u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_return_uActionPerformed(evt);
            }
        });
        jPanel7.add(customer_return_u, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, -1, 30));

        i12.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        i12.setForeground(new java.awt.Color(255, 255, 255));
        i12.setText("Insert");
        jPanel7.add(i12, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, -1, 30));

        customer_return_s.setBackground(new java.awt.Color(79, 51, 81));
        customer_return_s.setSelected(true);
        customer_return_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_return_sActionPerformed(evt);
            }
        });
        jPanel7.add(customer_return_s, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, -1, 30));

        customer_return_i.setBackground(new java.awt.Color(79, 51, 81));
        customer_return_i.setSelected(true);
        customer_return_i.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_return_iActionPerformed(evt);
            }
        });
        jPanel7.add(customer_return_i, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, -1, 30));

        s12.setFont(new java.awt.Font("Nirmala UI", 0, 14)); // NOI18N
        s12.setForeground(new java.awt.Color(255, 255, 255));
        s12.setText("Search");
        jPanel7.add(s12, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, -1, 30));

        jPanel11.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 740, 190));

        emp_btnSave.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        emp_btnSave.setForeground(new java.awt.Color(255, 255, 255));
        emp_btnSave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emp_btnSave.setText("SAVE");
        emp_btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_btnSaveMouseClicked(evt);
            }
        });
        jPanel11.add(emp_btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 700, 180, 40));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btn_any.png"))); // NOI18N
        jPanel11.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 700, -1, -1));

        emp_btnClear.setFont(new java.awt.Font("Nirmala UI", 1, 18)); // NOI18N
        emp_btnClear.setForeground(new java.awt.Color(255, 255, 255));
        emp_btnClear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emp_btnClear.setText("CLEAR");
        emp_btnClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_btnClearMouseClicked(evt);
            }
        });
        jPanel11.add(emp_btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 700, 180, 40));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btn_any.png"))); // NOI18N
        jPanel11.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 700, -1, -1));

        jPanel9.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 770, 780));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Add New Employee", jPanel2);

        jPanel4.setBackground(new java.awt.Color(68, 50, 72));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel13.setBackground(new java.awt.Color(79, 51, 81));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "ALL LIST", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Iskoola Pota", 1, 19), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        empAllList.setBackground(new java.awt.Color(79, 51, 81));
        empAllList.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        empAllList.setForeground(new java.awt.Color(255, 255, 255));
        empAllList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Company", "Type", "Email", "Mobile", "Status"
            }
        ));
        empAllList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empAllListMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                empAllListMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(empAllList);

        jPanel13.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 1390, 360));

        emp_btnUpdate.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N
        emp_btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        emp_btnUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emp_btnUpdate.setText("UPDATE");
        emp_btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_btnUpdateMouseClicked(evt);
            }
        });
        jPanel13.add(emp_btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 668, 250, 40));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btn_anyLong.png"))); // NOI18N
        jPanel13.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 660, 270, 60));

        emp_btnSetActive.setFont(new java.awt.Font("Nirmala UI", 1, 17)); // NOI18N
        emp_btnSetActive.setForeground(new java.awt.Color(255, 255, 255));
        emp_btnSetActive.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emp_btnSetActive.setText("SET ACTIVE ");
        emp_btnSetActive.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_btnSetActive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_btnSetActiveMouseClicked(evt);
            }
        });
        jPanel13.add(emp_btnSetActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 668, 250, 40));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/btn_anyLong.png"))); // NOI18N
        jPanel13.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 660, 260, 60));

        jPanel8.setBackground(new java.awt.Color(79, 51, 81));
        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_1_23.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_23.setText("Search By Name or ID");
        jPanel8.add(jLabel_1_23, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, 30));

        emp_findInactive.setBackground(new java.awt.Color(79, 51, 81));
        buttonGroup1.add(emp_findInactive);
        emp_findInactive.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        emp_findInactive.setForeground(new java.awt.Color(255, 255, 255));
        emp_findInactive.setText("DEACTIVE");
        emp_findInactive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_findInactiveMouseClicked(evt);
            }
        });
        emp_findInactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emp_findInactiveActionPerformed(evt);
            }
        });
        jPanel8.add(emp_findInactive, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        emp_findAll.setBackground(new java.awt.Color(79, 51, 81));
        buttonGroup1.add(emp_findAll);
        emp_findAll.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        emp_findAll.setForeground(new java.awt.Color(255, 255, 255));
        emp_findAll.setSelected(true);
        emp_findAll.setText("ALL");
        emp_findAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_findAllMouseClicked(evt);
            }
        });
        emp_findAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emp_findAllActionPerformed(evt);
            }
        });
        jPanel8.add(emp_findAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, -1, -1));

        emp_findActive.setBackground(new java.awt.Color(79, 51, 81));
        buttonGroup1.add(emp_findActive);
        emp_findActive.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        emp_findActive.setForeground(new java.awt.Color(255, 255, 255));
        emp_findActive.setText("ACTIVE");
        emp_findActive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_findActiveMouseClicked(evt);
            }
        });
        emp_findActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emp_findActiveActionPerformed(evt);
            }
        });
        jPanel8.add(emp_findActive, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, -1, -1));

        emp_findByNameId.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        emp_findByNameId.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        emp_findByNameId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emp_findByNameIdKeyReleased(evt);
            }
        });
        jPanel8.add(emp_findByNameId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 260, 30));

        jPanel13.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 780, 110));

        jPanel17.setBackground(new java.awt.Color(79, 51, 81));
        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emp_img1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_img1MouseClicked(evt);
            }
        });
        jPanel17.add(emp_img1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel13.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 70, 200, 200));

        jLabel_1_22.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_22.setText("Image");
        jPanel13.add(jLabel_1_22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 30, -1, -1));

        jPanel16.setBackground(new java.awt.Color(79, 51, 81));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        emp_qr.setToolTipText("View Image");
        emp_qr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        emp_qr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_qrMouseClicked(evt);
            }
        });
        jPanel16.add(emp_qr, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 200));

        jPanel13.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 70, 200, -1));

        jLabel_1_2.setFont(new java.awt.Font("Nirmala UI", 0, 17)); // NOI18N
        jLabel_1_2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_1_2.setText("QR Code");
        jPanel13.add(jLabel_1_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, -1, -1));

        jPanel4.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 1470, 750));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("All Details", jPanel3);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 1520, 850));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/panelBack_1.jpg"))); // NOI18N
        jLabel1.setText("EM");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1580, 900));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void empAllListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empAllListMouseClicked
        try {

            emp_qr.setIcon(null);
            emp_img1.setIcon(null);

            selectedRow = (int) empAllList.getValueAt(empAllList.getSelectedRow(), 0);
            System.out.println(selectedRow);

            Employee emp = (Employee) EXTCLASS.getHibSession().load(Employee.class, selectedRow);
            if (emp != null) {

                if (!emp.getImg().isEmpty()) {

                    Image img = ImageIO.read(new File(emp.getImg()));
                    img = img.getScaledInstance(emp_img1.getWidth(), emp_img1.getHeight(), Image.SCALE_SMOOTH);
                    emp_img1.setIcon(new ImageIcon(img));
                }

                if (!emp.getQr().isEmpty()) {

                    qr = emp.getQr();
                    Image img = ImageIO.read(new File(emp.getQr()));
                    img = img.getScaledInstance(emp_qr.getWidth(), emp_qr.getHeight(), Image.SCALE_SMOOTH);
                    emp_qr.setIcon(new ImageIcon(img));
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_empAllListMouseClicked

    private void emp_btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_btnUpdateMouseClicked
        try {
            clearFields();
            isUpdateable = true;

            if (selectedRow != 0) {

                employee = (Employee) EXTCLASS.getHibSession().load(Employee.class, selectedRow);

                if (!employee.getImg().isEmpty()) {

                    imgpath = employee.getImg();
                    Image img = ImageIO.read(new File(employee.getImg()));
                    img = img.getScaledInstance(emp_img.getWidth(), emp_img.getHeight(), Image.SCALE_SMOOTH);
                    emp_img.setIcon(new ImageIcon(img));
                }

                emp_typeList.setSelectedItem(employee.getEmployeeType().getType() + " - " + employee.getEmployeeType().getIdemployeeType());
                emp_company.setText(employee.getMyCompanyDetails().getName() + " - " + employee.getMyCompanyDetails().getIdcompanyDetails());

                emp_name.setText(employee.getName());
                emp_un.setText(employee.getUsername());
                if (employee.getMobile() != null) {
                    emp_mob.setText(employee.getMobile().toString());
                }
                emp_email.setText(employee.getEmail());
                emp_password.setText(employee.getPassword());

                selectCheckBoxes();

                jTabbedPane1.setSelectedIndex(0);

            } else {
                EXTCLASS.showMessage("Please select the row!", "කරුණාකර පේළියක් තෝරන්න"
                        + "", "WARNING", Application.SINWARN, 2);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_btnUpdateMouseClicked

    private void emp_btnSetActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_btnSetActiveMouseClicked
        try {

            JLabel msg = new JLabel();
            String header = "";

            msg.setFont(new Font("Iskoola Pota", Font.PLAIN, 18));
            if (Application.getLangu().equals("SIN")) {
                header = Application.SININFO;
                msg.setText("ඔබට විශ්වාසයිද ?");
            } else {
                header = "INFO";
                msg.setText("Are you sure ?");
            }

            if (selectedRow != 0) {

                if (JOptionPane.showConfirmDialog(this, msg, header, JOptionPane.WARNING_MESSAGE) == 0) {

                    Employee employee = (Employee) EXTCLASS.getHibSession().load(Employee.class, selectedRow);

                    if (employee.getStatus().equals("active")) {

                        employee.setStatus("deactive");

                    } else if (employee.getStatus().equals("deactive")) {

                        employee.setStatus("active");

                    }
                    EXTCLASS.getHibSession().update(employee);

                    loadEmpTbl(c);
                    emp_findAll.setSelected(true);

                    Transaction t = EXTCLASS.getHibSession().beginTransaction();
                    t.commit();

                    clearFields();
                }

            } else {

                EXTCLASS.showMessage("Please select the row!", "කරුණාකර පේළියක් තෝරන්න"
                        + "", "WARNING", Application.SINWARN, 2);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_btnSetActiveMouseClicked

    private void emp_mobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emp_mobKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {

            evt.consume();
        }
        if (emp_mob.getText().length() >= 15) {
            evt.consume();
        }
    }//GEN-LAST:event_emp_mobKeyTyped

    private void emp_typeListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emp_typeListKeyReleased

    }//GEN-LAST:event_emp_typeListKeyReleased

    private void emp_imgUpload1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_imgUpload1MouseClicked

        try {
            JFileChooser jf = new JFileChooser();
            int x = jf.showOpenDialog(this);
            if (x == jf.APPROVE_OPTION) {
                File f = jf.getSelectedFile();
                String path = f.getAbsolutePath();
                imgpath = path.replace("\\", "/");
                f = new File(imgpath);
                Image img = ImageIO.read(f);
                img = img.getScaledInstance(emp_img.getWidth(), emp_img.getHeight(), Image.SCALE_SMOOTH);
                emp_img.setIcon(new ImageIcon(img));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_imgUpload1MouseClicked

    private void emp_btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_btnSaveMouseClicked

        try {

            ArrayList<String> err = checkEmpFields();
            if (err.isEmpty()) {

                if (!isUpdateable) {
                    //save
                    employee = new Employee();
                }

                EmployeeType type = (EmployeeType) EXTCLASS.getHibSession().load(EmployeeType.class, Integer.parseInt(emp_typeList.getSelectedItem().toString().split(" - ")[1]));

                MyCompanyDetails company = (MyCompanyDetails) EXTCLASS.getHibSession().load(MyCompanyDetails.class, Integer.parseInt(emp_company.getText().split(" - ")[1]));

                employee.setEmployeeType(type);
                employee.setMyCompanyDetails(company);
                employee.setImg(imgpath);
                employee.setName(emp_name.getText());
                employee.setUsername(emp_un.getText());
                employee.setEmail(emp_email.getText());
                employee.setPassword(emp_password.getText());

                boolean isInt = false;

                try {
                    if (!emp_mob.getText().isEmpty()) {
                        employee.setMobile(Integer.parseInt(emp_mob.getText()));

                    }

                    isInt = true;
                } catch (NumberFormatException e) {
                    isInt = false;
                }

                employee.setStatus("active");

                if (isInt) {

                    if (!isUpdateable) {
                        employee.setIdemployee(Integer.parseInt(new SimpleDateFormat("yyyMM").format(new Date()) + EXTCLASS.getSaltString(3)));

                        EXTCLASS.getHibSession().save(employee);

                        if (!type.getType().equalsIgnoreCase("Admin")) {

                            addPrivileges("save");
                        }

                        //genrate qr code and save
                        String idemployee = String.valueOf(employee.getIdemployee());

                        ByteArrayOutputStream out = QRCode.from(idemployee).to(ImageType.PNG).stream();
                        File f = null;
                        try {
                            EXTCLASS.createFileinC();
                            f = new File("C:\\TGPOS\\Employee_QR");
                            f.mkdir();

                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        FileOutputStream fos;
                        try {

                            File file = new File(f, employee.getIdemployee() + "_" + employee.getName().trim().replace(" ", "_") + ".png");

                            fos = new FileOutputStream(file);
                            fos.write(out.toByteArray());
                            fos.flush();

                            qr = file.getAbsolutePath();

                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                        employee.setQr(qr);

                        EXTCLASS.getHibSession().save(employee);

                        EXTCLASS.showMessage("Record added!", "දත්ත එක් කළා !", "SUCCESS", Application.SINSUCCESS, 1);

                    } else {
                        //update
                        if (employee != null) {

                            if (!type.getType().equalsIgnoreCase("Admin")) {
                                addPrivileges("update");
                            }

                            EXTCLASS.getHibSession().update(employee);
                            EXTCLASS.showMessage("Record updated!", "දත්ත යාවත්කාලීන කරන ලදි !", "SUCCESS", Application.SINSUCCESS, 1);

                        }

                    }

                    Transaction t = EXTCLASS.getHibSession().beginTransaction();
                    t.commit();

                    loadEmpTbl(c);
                    clearFields();

                } else {
                    EXTCLASS.showMessage("Enter numbers only!", "අංක පමණක් ඇතුළත් කරන්න", "ERROR", Application.SINERROR, 0);

                }

            } else {
                String erros = "";
                int i = 0;
                for (String e : err) {
                    erros += e;
                    i++;
                    erros += (err.size() != i) ? "," : ".";

                }
                EXTCLASS.showMessage("Fill following fields " + erros, "කරුණාකර පහත දැක්වෙන විස්තර පුරවන්න " + erros, "ERROR", Application.SINERROR, 0);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_btnSaveMouseClicked

    private void emp_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_imgMouseClicked

        try {
            String url = "file:///" + imgpath.replace('\\', '/');
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_emp_imgMouseClicked

    private void emp_qrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_qrMouseClicked

        try {
            if (qr != null) {

                String url = "file:///" + qr.replace('\\', '/');
                java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_qrMouseClicked

    private void emp_btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_btnClearMouseClicked
        clearFields();
    }//GEN-LAST:event_emp_btnClearMouseClicked

    private void emp_passShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emp_passShowActionPerformed
        if (emp_passShow.isSelected()) {
            emp_password.setEchoChar((char) 0);
        } else {
            emp_password.setEchoChar('*');
        }
    }//GEN-LAST:event_emp_passShowActionPerformed

    private void emp_btnAddEmpTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_btnAddEmpTypeMouseClicked
        try {

            String newType = null;

            JLabel l = new JLabel();
            l.setFont(new Font("Nirmala UI", Font.PLAIN, 18));
            if (Application.getLangu().equals("SIN")) {
                l.setText("නව වර්ගයක් ඇතුල් කරන්න");
                newType = JOptionPane.showInputDialog(null, l, "වර්ගයක් එකතු කරන්න", JOptionPane.INFORMATION_MESSAGE);
            } else {

                l.setText("Enter new type");
                newType = JOptionPane.showInputDialog(null, l, "ADD TYPE", JOptionPane.INFORMATION_MESSAGE);
            }

            if (!newType.isEmpty() && newType != null) {

                EmployeeType e = new EmployeeType();
                e.setType(newType);

                EXTCLASS.getHibSession().save(e);

                Transaction t = EXTCLASS.getHibSession().beginTransaction();
                t.commit();

                loadEmpType();
            }

        } catch (NullPointerException n) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_btnAddEmpTypeMouseClicked

    private void stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockActionPerformed
        checkBoxInvoke("stock");
    }//GEN-LAST:event_stockActionPerformed

    private void stock_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_iActionPerformed

    }//GEN-LAST:event_stock_iActionPerformed

    private void stock_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_uActionPerformed

    }//GEN-LAST:event_stock_uActionPerformed

    private void stock_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_sActionPerformed

    }//GEN-LAST:event_stock_sActionPerformed

    private void grnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grnActionPerformed
        checkBoxInvoke("grn");
    }//GEN-LAST:event_grnActionPerformed

    private void productActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productActionPerformed
        checkBoxInvoke("product");
    }//GEN-LAST:event_productActionPerformed

    private void unitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitActionPerformed
        checkBoxInvoke("unit");
    }//GEN-LAST:event_unitActionPerformed

    private void product_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_typeActionPerformed
        checkBoxInvoke("product_type");
    }//GEN-LAST:event_product_typeActionPerformed

    private void vendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorActionPerformed
        checkBoxInvoke("vendor");
    }//GEN-LAST:event_vendorActionPerformed

    private void companyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyActionPerformed
        checkBoxInvoke("company");
    }//GEN-LAST:event_companyActionPerformed

    private void supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierActionPerformed
        checkBoxInvoke("supplier");
    }//GEN-LAST:event_supplierActionPerformed

    private void customer_POSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_POSActionPerformed
        checkBoxInvoke("customer_POS");
    }//GEN-LAST:event_customer_POSActionPerformed

    private void vendor_POSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_POSActionPerformed
        checkBoxInvoke("vendor_POS");
    }//GEN-LAST:event_vendor_POSActionPerformed

    private void vendor_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_returnActionPerformed
        checkBoxInvoke("vendor_return");
    }//GEN-LAST:event_vendor_returnActionPerformed

    private void customer_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_returnActionPerformed
        checkBoxInvoke("customer_return");
    }//GEN-LAST:event_customer_returnActionPerformed

    private void grn_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_sActionPerformed

    private void grn_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_uActionPerformed

    private void grn_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grn_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grn_iActionPerformed

    private void unit_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unit_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unit_sActionPerformed

    private void unit_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unit_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unit_uActionPerformed

    private void unit_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unit_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unit_iActionPerformed

    private void product_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_sActionPerformed

    private void product_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_uActionPerformed

    private void product_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_iActionPerformed

    private void product_type_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_type_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_type_sActionPerformed

    private void product_type_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_type_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_type_uActionPerformed

    private void product_type_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_type_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_type_iActionPerformed

    private void company_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_company_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_company_sActionPerformed

    private void company_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_company_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_company_uActionPerformed

    private void company_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_company_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_company_iActionPerformed

    private void vendor_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_iActionPerformed

    private void vendor_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_uActionPerformed

    private void vendor_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_sActionPerformed

    private void supplier_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplier_iActionPerformed

    private void supplier_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplier_uActionPerformed

    private void supplier_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplier_sActionPerformed

    private void vendor_POS_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_POS_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_POS_iActionPerformed

    private void vendor_POS_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_POS_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_POS_uActionPerformed

    private void vendor_POS_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_POS_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_POS_sActionPerformed

    private void customer_POS_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_POS_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_POS_iActionPerformed

    private void customer_POS_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_POS_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_POS_uActionPerformed

    private void customer_POS_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_POS_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_POS_sActionPerformed

    private void vendor_return_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_return_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_return_sActionPerformed

    private void vendor_return_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_return_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_return_iActionPerformed

    private void vendor_return_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendor_return_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendor_return_uActionPerformed

    private void customer_return_uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_return_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_return_uActionPerformed

    private void customer_return_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_return_sActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_return_sActionPerformed

    private void customer_return_iActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_return_iActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_return_iActionPerformed

    private void emp_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emp_nameKeyTyped
        try {

            if (emp_name.getText().contains(" ")) {

                emp_un.setText(emp_name.getText().split(" ")[0]);
            }

        } catch (ArrayIndexOutOfBoundsException a) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_emp_nameKeyTyped

    private void emp_findInactiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_findInactiveMouseClicked

    }//GEN-LAST:event_emp_findInactiveMouseClicked

    private void emp_findInactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emp_findInactiveActionPerformed
        System.out.println("deactive");
        changeEMPState("deactive");
    }//GEN-LAST:event_emp_findInactiveActionPerformed

    private void emp_findAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_findAllMouseClicked

    }//GEN-LAST:event_emp_findAllMouseClicked

    private void emp_findAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emp_findAllActionPerformed
        System.out.println("all");
        loadEmpTbl(c);
    }//GEN-LAST:event_emp_findAllActionPerformed

    private void emp_findActiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_findActiveMouseClicked

    }//GEN-LAST:event_emp_findActiveMouseClicked

    private void emp_findActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emp_findActiveActionPerformed
        System.out.println("active");
        changeEMPState("active");
    }//GEN-LAST:event_emp_findActiveActionPerformed

    private void emp_findByNameIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emp_findByNameIdKeyReleased

        try {
            if (!emp_findByNameId.getText().isEmpty()) {

                String q = "FROM Employee WHERE idemployee like concat('%',:idemployee,'%') OR name like concat('%',:name,'%') ";
                Query query;

                if (emp_findActive.isSelected()) {

                    q += " and status =:st";
                    query = EXTCLASS.getHibSession().createQuery(q);
                    query.setParameter("st", "active");
                } else if (emp_findInactive.isSelected()) {

                    q += " and status =:st";
                    query = EXTCLASS.getHibSession().createQuery(q);
                    query.setParameter("st", "deactive");
                } else {
                    query = EXTCLASS.getHibSession().createQuery(q);
                }

                query.setParameter("idemployee", emp_findByNameId.getText());
                query.setParameter("name", emp_findByNameId.getText());

                DefaultTableModel dtm = (DefaultTableModel) empAllList.getModel();
                dtm.setRowCount(0);

                if (!query.list().isEmpty()) {

                    List<Employee> list = query.list();

                    for (Employee e : list) {
                        Vector v = new Vector();
                        v.add(e.getIdemployee());
                        v.add(e.getName());
                        v.add(e.getMyCompanyDetails().getName());
                        v.add(e.getEmployeeType().getType());
                        v.add(e.getEmail());
                        v.add(e.getMobile());
                        v.add(e.getStatus());
                        dtm.addRow(v);
                    }

                }

            } else {

                if (emp_findActive.isSelected()) {

                    changeEMPState("active");

                } else if (emp_findInactive.isSelected()) {

                    changeEMPState("deactive");
                } else {

                    loadEmpTbl(c);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_emp_findByNameIdKeyReleased

    private void emp_img1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_img1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_emp_img1MouseClicked

    private void empAllListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empAllListMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_empAllListMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JCheckBox company;
    private static javax.swing.JCheckBox company_i;
    private static javax.swing.JCheckBox company_s;
    private static javax.swing.JCheckBox company_u;
    private static javax.swing.JCheckBox customer_POS;
    private static javax.swing.JCheckBox customer_POS_i;
    private static javax.swing.JCheckBox customer_POS_s;
    private static javax.swing.JCheckBox customer_POS_u;
    private static javax.swing.JCheckBox customer_return;
    private static javax.swing.JCheckBox customer_return_i;
    private static javax.swing.JCheckBox customer_return_s;
    private static javax.swing.JCheckBox customer_return_u;
    private javax.swing.JTable empAllList;
    private javax.swing.JLabel emp_btnAddEmpType;
    private static javax.swing.JLabel emp_btnClear;
    private static javax.swing.JLabel emp_btnSave;
    private static javax.swing.JLabel emp_btnSetActive;
    private static javax.swing.JLabel emp_btnUpdate;
    private javax.swing.JTextField emp_company;
    private javax.swing.JTextField emp_email;
    private static javax.swing.JRadioButton emp_findActive;
    private static javax.swing.JRadioButton emp_findAll;
    private javax.swing.JTextField emp_findByNameId;
    private static javax.swing.JRadioButton emp_findInactive;
    private javax.swing.JLabel emp_img;
    private javax.swing.JLabel emp_img1;
    private javax.swing.JLabel emp_imgUpload1;
    private javax.swing.JTextField emp_mob;
    private javax.swing.JTextField emp_name;
    private static javax.swing.JCheckBox emp_passShow;
    private javax.swing.JPasswordField emp_password;
    private javax.swing.JLabel emp_qr;
    private javax.swing.JComboBox<String> emp_typeList;
    private javax.swing.JTextField emp_un;
    private static javax.swing.JCheckBox grn;
    private static javax.swing.JCheckBox grn_i;
    private static javax.swing.JCheckBox grn_s;
    private static javax.swing.JCheckBox grn_u;
    private static javax.swing.JLabel i1;
    private static javax.swing.JLabel i10;
    private static javax.swing.JLabel i11;
    private static javax.swing.JLabel i12;
    private static javax.swing.JLabel i2;
    private static javax.swing.JLabel i3;
    private static javax.swing.JLabel i4;
    private static javax.swing.JLabel i5;
    private static javax.swing.JLabel i6;
    private static javax.swing.JLabel i7;
    private static javax.swing.JLabel i8;
    private static javax.swing.JLabel i9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JLabel jLabel_1_1;
    private static javax.swing.JLabel jLabel_1_10;
    private static javax.swing.JLabel jLabel_1_11;
    private static javax.swing.JLabel jLabel_1_12;
    private static javax.swing.JLabel jLabel_1_13;
    private static javax.swing.JLabel jLabel_1_14;
    private static javax.swing.JLabel jLabel_1_15;
    private static javax.swing.JLabel jLabel_1_16;
    private static javax.swing.JLabel jLabel_1_17;
    private static javax.swing.JLabel jLabel_1_18;
    private static javax.swing.JLabel jLabel_1_19;
    private static javax.swing.JLabel jLabel_1_2;
    private static javax.swing.JLabel jLabel_1_20;
    private static javax.swing.JLabel jLabel_1_21;
    private static javax.swing.JLabel jLabel_1_22;
    private static javax.swing.JLabel jLabel_1_23;
    private static javax.swing.JLabel jLabel_1_3;
    private static javax.swing.JLabel jLabel_1_4;
    private static javax.swing.JLabel jLabel_1_5;
    private static javax.swing.JLabel jLabel_1_6;
    private static javax.swing.JLabel jLabel_1_7;
    private static javax.swing.JLabel jLabel_1_8;
    private static javax.swing.JLabel jLabel_1_9;
    private javax.swing.JPanel jPanel1;
    private static javax.swing.JPanel jPanel11;
    private static javax.swing.JPanel jPanel13;
    private static javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private static javax.swing.JPanel jPanel5;
    private static javax.swing.JPanel jPanel6;
    private static javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JCheckBox product;
    private static javax.swing.JCheckBox product_i;
    private static javax.swing.JCheckBox product_s;
    private static javax.swing.JCheckBox product_type;
    private static javax.swing.JCheckBox product_type_i;
    private static javax.swing.JCheckBox product_type_s;
    private static javax.swing.JCheckBox product_type_u;
    private static javax.swing.JCheckBox product_u;
    private static javax.swing.JLabel s1;
    private static javax.swing.JLabel s10;
    private static javax.swing.JLabel s11;
    private static javax.swing.JLabel s12;
    private static javax.swing.JLabel s2;
    private static javax.swing.JLabel s3;
    private static javax.swing.JLabel s4;
    private static javax.swing.JLabel s5;
    private static javax.swing.JLabel s6;
    private static javax.swing.JLabel s7;
    private static javax.swing.JLabel s8;
    private static javax.swing.JLabel s9;
    private static javax.swing.JCheckBox stock;
    private static javax.swing.JCheckBox stock_i;
    private static javax.swing.JCheckBox stock_s;
    private static javax.swing.JCheckBox stock_u;
    private static javax.swing.JCheckBox supplier;
    private static javax.swing.JCheckBox supplier_i;
    private static javax.swing.JCheckBox supplier_s;
    private static javax.swing.JCheckBox supplier_u;
    private static javax.swing.JLabel u1;
    private static javax.swing.JLabel u10;
    private static javax.swing.JLabel u11;
    private static javax.swing.JLabel u12;
    private static javax.swing.JLabel u2;
    private static javax.swing.JLabel u3;
    private static javax.swing.JLabel u4;
    private static javax.swing.JLabel u5;
    private static javax.swing.JLabel u6;
    private static javax.swing.JLabel u7;
    private static javax.swing.JLabel u8;
    private static javax.swing.JLabel u9;
    private static javax.swing.JCheckBox unit;
    private static javax.swing.JCheckBox unit_i;
    private static javax.swing.JCheckBox unit_s;
    private static javax.swing.JCheckBox unit_u;
    private static javax.swing.JCheckBox vendor;
    private static javax.swing.JCheckBox vendor_POS;
    private static javax.swing.JCheckBox vendor_POS_i;
    private static javax.swing.JCheckBox vendor_POS_s;
    private static javax.swing.JCheckBox vendor_POS_u;
    private javax.swing.JCheckBox vendor_i;
    private static javax.swing.JCheckBox vendor_return;
    private static javax.swing.JCheckBox vendor_return_i;
    private static javax.swing.JCheckBox vendor_return_s;
    private static javax.swing.JCheckBox vendor_return_u;
    private static javax.swing.JCheckBox vendor_s;
    private static javax.swing.JCheckBox vendor_u;
    // End of variables declaration//GEN-END:variables

    public static void changeLangu() {

        if (Application.getLangu().equals("SIN")) {

            jTabbedPane1.setTitleAt(0, "එකතු කරන්න ");
            jTabbedPane1.setTitleAt(1, "සියලු ලැයිස්තුව ");

            //pane 1
            jLabel_1_1.setText("පින්තූරය");
            jLabel_1_2.setText("QR කේතය");
            jLabel_1_3.setText("වර්ගය ");
            jLabel_1_4.setText("සමාගම");
            jLabel_1_5.setText("සම්පූර්ණ නම");
            jLabel_1_6.setText("පරිශීලක නාමය");
            jLabel_1_7.setText("ජංගම දු :අ ");
            jLabel_1_8.setText("විද්‍යුත් තැපෑල");
            jLabel_1_9.setText("රහස් පදය");

            jLabel_1_10.setText("තොගය");
            jLabel_1_11.setText("තොග ගැනීම");
            jLabel_1_12.setText("ඒකකය");
            jLabel_1_13.setText("නිෂ්පාදන");
            jLabel_1_14.setText("නි.වර්ගය");

            jLabel_1_15.setText("සමාගම");
            jLabel_1_16.setText("වෙළෙන්දන් ");
            jLabel_1_17.setText("සැපයුම්කරුවන්");

            jLabel_1_18.setText("වෙ.විකිණීම");
            jLabel_1_19.setText("පා.විකිණීම");
            jLabel_1_20.setText("වෙ.ආපසු ");
            jLabel_1_21.setText("පා.ආපසු ");
            jLabel_1_22.setText("පින්තූරය");

            jLabel_1_23.setText("නම/හැඳුනුම් අංකයෙන් සෙවීම");

            changeSubElements("SIN", jPanel5);
            changeSubElements("SIN", jPanel6);
            changeSubElements("SIN", jPanel7);

            emp_passShow.setText("පෙන්වන්න");

            emp_btnSave.setText("සුරකින්න");
            emp_btnClear.setText("මකන්න");

            emp_btnUpdate.setText("යාවත්කාලීන කරන්න");
            emp_btnSetActive.setText("තත්ත්වය වෙනස් කරන්න");

            emp_findActive.setText("සක්‍රීය ");
            emp_findInactive.setText("අක්‍රීය");
            emp_findAll.setText("සියළු");

            TitledBorder t1 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t1.setTitle("විස්තර");
            t1.setTitleColor(Color.WHITE);
            t1.setTitleFont(new Font("Nirmala UI", Font.BOLD, 17));

            TitledBorder t2 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t2.setTitle("වරප්‍රසාද");
            t2.setTitleColor(Color.WHITE);
            t2.setTitleFont(new Font("Nirmala UI", Font.BOLD, 17));

            TitledBorder t3 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t3.setTitle("තොග කළමනාකරණය ");
            t3.setTitleColor(Color.WHITE);
            t3.setTitleFont(new Font("Nirmala UI", Font.BOLD, 16));

            TitledBorder t4 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t4.setTitle("සැපයුම්කරුවන් කළමනාකරණය ");
            t4.setTitleColor(Color.WHITE);
            t4.setTitleFont(new Font("Nirmala UI", Font.BOLD, 16));

            TitledBorder t5 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t5.setTitle("අලෙවි කළමනාකරණය ");
            t5.setTitleColor(Color.WHITE);
            t5.setTitleFont(new Font("Nirmala UI", Font.BOLD, 16));

            jPanel14.setBorder(t1);
            jPanel11.setBorder(t2);
            jPanel5.setBorder(t3);
            jPanel6.setBorder(t4);
            jPanel7.setBorder(t5);

        } else {
            jTabbedPane1.setTitleAt(0, "ADD EMPLOYEE");
            jTabbedPane1.setTitleAt(1, "EMPLOYEE LIST");

            //pane 1
            jLabel_1_1.setText("Image");
            jLabel_1_2.setText("QR Code");
            jLabel_1_3.setText("Employee Type");
            jLabel_1_4.setText("Company");
            jLabel_1_5.setText("Full Name");
            jLabel_1_6.setText("Username");
            jLabel_1_7.setText("Mobile NO");
            jLabel_1_8.setText("Email");
            jLabel_1_9.setText("Password");

            jLabel_1_10.setText("Stock");
            jLabel_1_11.setText("GRN");
            jLabel_1_12.setText("Unit");
            jLabel_1_13.setText("Product");
            jLabel_1_14.setText("Product Type");

            jLabel_1_15.setText("Company");
            jLabel_1_16.setText("Vendor");
            jLabel_1_17.setText("Supplier");

            jLabel_1_18.setText("Vendor POS");
            jLabel_1_19.setText("Customer POS");
            jLabel_1_20.setText("Vendor Return");
            jLabel_1_21.setText("Customer Return");
            jLabel_1_22.setText("Image");

            jLabel_1_23.setText("Search By Name or ID");

            emp_passShow.setText("Show");

            emp_btnSave.setText("SAVE");
            emp_btnClear.setText("CLEAR");

            emp_btnUpdate.setText("UPDATE");
            emp_btnSetActive.setText("CHANGE STATUS");

            emp_findActive.setText("ACTIVE");
            emp_findInactive.setText("DEACTIVE");
            emp_findAll.setText("ALL");

            TitledBorder t1 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t1.setTitle("DETAILS");
            t1.setTitleColor(Color.WHITE);
            t1.setTitleFont(new Font("Nirmala UI", Font.BOLD, 17));

            TitledBorder t2 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t2.setTitle("PRIVILEGES");
            t2.setTitleColor(Color.WHITE);
            t2.setTitleFont(new Font("Nirmala UI", Font.BOLD, 17));

            TitledBorder t3 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t3.setTitle("STOCK MANAGEMENT");
            t3.setTitleColor(Color.WHITE);
            t3.setTitleFont(new Font("Nirmala UI", Font.BOLD, 16));

            TitledBorder t4 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t4.setTitle("SUPPLIER MANAGEMENT");
            t4.setTitleColor(Color.WHITE);
            t4.setTitleFont(new Font("Nirmala UI", Font.BOLD, 16));

            TitledBorder t5 = BorderFactory.createTitledBorder(new SoftBevelBorder(0));
            t5.setTitle("SALES MANAGEMENT");
            t5.setTitleColor(Color.WHITE);
            t5.setTitleFont(new Font("Nirmala UI", Font.BOLD, 16));

            jPanel14.setBorder(t1);
            jPanel11.setBorder(t2);
            jPanel5.setBorder(t3);
            jPanel6.setBorder(t4);
            jPanel7.setBorder(t5);

            changeSubElements("ENG", jPanel5);
            changeSubElements("ENG", jPanel6);
            changeSubElements("ENG", jPanel7);
        }

    }

    private static void changeSubElements(String langu, JPanel panel) {

        for (Component jc : panel.getComponents()) {
            if (jc instanceof JLabel) {

                JLabel lbl = (JLabel) jc;

                if (lbl.getText().equals("Insert") || lbl.getText().equals("එකතු")) {
                    if (langu.equals("SIN")) {

                        lbl.setText("එකතු");
                    } else {

                        lbl.setText("Insert");
                    }

                } else if (lbl.getText().equals("Update") || lbl.getText().equals("යාවත්කාලීන")) {
                    if (langu.equals("SIN")) {

                        lbl.setText("යාවත්කාලීන");
                    } else {

                        lbl.setText("Update");
                    }

                } else if (lbl.getText().equals("Search") || lbl.getText().equals("සෙවීම")) {
                    if (langu.equals("SIN")) {

                        lbl.setText("සෙවීම");
                    } else {
                        lbl.setText("Search");

                    }

                }
            }
        }

    }

    private void checkBoxInvoke(String st) {
        try {
            if (st.equals("stock")) {

                if (stock.isSelected()) {

                    stock_i.setEnabled(true);
                    stock_u.setEnabled(true);
                    stock_s.setEnabled(true);

                    stock_i.setSelected(true);
                    stock_u.setSelected(true);
                    stock_s.setSelected(true);
                } else {

                    stock_i.setEnabled(false);
                    stock_u.setEnabled(false);
                    stock_s.setEnabled(false);

                    stock_i.setSelected(false);
                    stock_u.setSelected(false);
                    stock_s.setSelected(false);

                }

            } else if (st.equals("grn")) {

                if (grn.isSelected()) {

                    grn_i.setEnabled(true);
                    grn_u.setEnabled(true);
                    grn_s.setEnabled(true);

                    grn_i.setSelected(true);
                    grn_u.setSelected(true);
                    grn_s.setSelected(true);
                } else {

                    grn_i.setEnabled(false);
                    grn_u.setEnabled(false);
                    grn_s.setEnabled(false);

                    grn_i.setSelected(false);
                    grn_u.setSelected(false);
                    grn_s.setSelected(false);

                }

            } else if (st.equals("unit")) {

                if (unit.isSelected()) {

                    unit_i.setEnabled(true);
                    unit_u.setEnabled(true);
                    unit_s.setEnabled(true);

                    unit_i.setSelected(true);
                    unit_u.setSelected(true);
                    unit_s.setSelected(true);
                } else {

                    unit_i.setEnabled(false);
                    unit_u.setEnabled(false);
                    unit_s.setEnabled(false);

                    unit_i.setSelected(false);
                    unit_u.setSelected(false);
                    unit_s.setSelected(false);

                }

            } else if (st.equals("product")) {

                if (product.isSelected()) {

                    product_i.setEnabled(true);
                    product_u.setEnabled(true);
                    product_s.setEnabled(true);

                    product_i.setSelected(true);
                    product_u.setSelected(true);
                    product_s.setSelected(true);
                } else {

                    product_i.setEnabled(false);
                    product_u.setEnabled(false);
                    product_s.setEnabled(false);

                    product_i.setSelected(false);
                    product_u.setSelected(false);
                    product_s.setSelected(false);

                }

            } else if (st.equals("product_type")) {

                if (product_type.isSelected()) {

                    product_type_i.setEnabled(true);
                    product_type_u.setEnabled(true);
                    product_type_s.setEnabled(true);

                    product_type_i.setSelected(true);
                    product_type_u.setSelected(true);
                    product_type_s.setSelected(true);
                } else {

                    product_type_i.setEnabled(false);
                    product_type_u.setEnabled(false);
                    product_type_s.setEnabled(false);

                    product_type_i.setSelected(false);
                    product_type_u.setSelected(false);
                    product_type_s.setSelected(false);

                }
            } else if (st.equals("company")) {

                if (company.isSelected()) {

                    company_i.setEnabled(true);
                    company_u.setEnabled(true);
                    company_s.setEnabled(true);

                    company_i.setSelected(true);
                    company_u.setSelected(true);
                    company_s.setSelected(true);
                } else {
                    company_i.setEnabled(false);
                    company_u.setEnabled(false);
                    company_s.setEnabled(false);

                    company_i.setSelected(false);
                    company_u.setSelected(false);
                    company_s.setSelected(false);

                }
            } else if (st.equals("vendor")) {

                if (vendor.isSelected()) {

                    vendor_i.setEnabled(true);
                    vendor_u.setEnabled(true);
                    vendor_s.setEnabled(true);

                    vendor_i.setSelected(true);
                    vendor_u.setSelected(true);
                    vendor_s.setSelected(true);
                } else {
                    vendor_i.setEnabled(false);
                    vendor_u.setEnabled(false);
                    vendor_s.setEnabled(false);

                    vendor_i.setSelected(false);
                    vendor_u.setSelected(false);
                    vendor_s.setSelected(false);

                }
            } else if (st.equals("supplier")) {

                if (supplier.isSelected()) {

                    supplier_i.setEnabled(true);
                    supplier_u.setEnabled(true);
                    supplier_s.setEnabled(true);

                    supplier_i.setSelected(true);
                    supplier_u.setSelected(true);
                    supplier_s.setSelected(true);
                } else {
                    supplier_i.setEnabled(false);
                    supplier_u.setEnabled(false);
                    supplier_s.setEnabled(false);

                    supplier_i.setSelected(false);
                    supplier_u.setSelected(false);
                    supplier_s.setSelected(false);

                }
            } else if (st.equals("vendor_POS")) {

                if (vendor_POS.isSelected()) {

                    vendor_POS_i.setEnabled(true);
                    vendor_POS_u.setEnabled(true);
                    vendor_POS_s.setEnabled(true);

                    vendor_POS_i.setSelected(true);
                    vendor_POS_u.setSelected(true);
                    vendor_POS_s.setSelected(true);
                } else {
                    vendor_POS_i.setEnabled(false);
                    vendor_POS_u.setEnabled(false);
                    vendor_POS_s.setEnabled(false);

                    vendor_POS_i.setSelected(false);
                    vendor_POS_u.setSelected(false);
                    vendor_POS_s.setSelected(false);

                }
            } else if (st.equals("customer_POS")) {

                if (customer_POS.isSelected()) {

                    customer_POS_i.setEnabled(true);
                    customer_POS_u.setEnabled(true);
                    customer_POS_s.setEnabled(true);

                    customer_POS_i.setSelected(true);
                    customer_POS_u.setSelected(true);
                    customer_POS_s.setSelected(true);
                } else {
                    customer_POS_i.setEnabled(false);
                    customer_POS_u.setEnabled(false);
                    customer_POS_s.setEnabled(false);

                    customer_POS_i.setSelected(false);
                    customer_POS_u.setSelected(false);
                    customer_POS_s.setSelected(false);

                }
            } else if (st.equals("vendor_return")) {

                if (vendor_return.isSelected()) {

                    vendor_return_i.setEnabled(true);
                    vendor_return_u.setEnabled(true);
                    vendor_return_s.setEnabled(true);

                    vendor_return_i.setSelected(true);
                    vendor_return_u.setSelected(true);
                    vendor_return_s.setSelected(true);
                } else {
                    vendor_return_i.setEnabled(false);
                    vendor_return_u.setEnabled(false);
                    vendor_return_s.setEnabled(false);

                    vendor_return_i.setSelected(false);
                    vendor_return_u.setSelected(false);
                    vendor_return_s.setSelected(false);

                }
            } else if (st.equals("customer_return")) {

                if (customer_return.isSelected()) {

                    customer_return_i.setEnabled(true);
                    customer_return_u.setEnabled(true);
                    customer_return_s.setEnabled(true);

                    customer_return_i.setSelected(true);
                    customer_return_u.setSelected(true);
                    customer_return_s.setSelected(true);
                } else {
                    customer_return_i.setEnabled(false);
                    customer_return_u.setEnabled(false);
                    customer_return_s.setEnabled(false);

                    customer_return_i.setSelected(false);
                    customer_return_u.setSelected(false);
                    customer_return_s.setSelected(false);

                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void loadEmpType() {
        try {

            Criteria c = EXTCLASS.getHibSession().createCriteria(EmployeeType.class);
            if (!c.list().isEmpty()) {

                List<EmployeeType> list = c.list();

                Vector v = new Vector();
                for (EmployeeType employeeType : list) {

                    v.add(employeeType.getType() + " - " + employeeType.getIdemployeeType());

                }
                emp_typeList.setModel(new DefaultComboBoxModel(v));

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearFields() {

        Criteria c = EXTCLASS.getHibSession().createCriteria(MyCompanyDetails.class);
        c.add(Restrictions.eq("status", "active"));
        if (!c.list().isEmpty()) {

            MyCompanyDetails com = (MyCompanyDetails) c.uniqueResult();
            emp_company.setText(com.getName() + " - " + com.getIdcompanyDetails());
        }

        imgpath = "";
        qr = "";

        employee = null;
        isUpdateable = false;

        if (emp_typeList.getModel().getSize() != 0) {

            emp_typeList.setSelectedIndex(0);
        }

        emp_img.setIcon(null);
        emp_img1.setIcon(null);
        emp_qr.setIcon(null);
        emp_name.setText(null);
        emp_un.setText(null);
        emp_mob.setText(null);
        emp_email.setText(null);
        emp_password.setText(null);

        stock.setSelected(true);
        grn.setSelected(true);
        product.setSelected(true);
        product_type.setSelected(true);
        unit.setSelected(true);

        company.setSelected(true);
        vendor.setSelected(true);
        supplier.setSelected(true);

        vendor_POS.setSelected(true);
        vendor_return.setSelected(true);
        customer_POS.setSelected(true);
        customer_return.setSelected(true);

        checkBoxInvoke("stock");
        checkBoxInvoke("grn");
        checkBoxInvoke("product");
        checkBoxInvoke("product_type");
        checkBoxInvoke("unit");

        checkBoxInvoke("company");
        checkBoxInvoke("vendor");
        checkBoxInvoke("supplier");

        checkBoxInvoke("vendor_POS");
        checkBoxInvoke("customer_POS");
        checkBoxInvoke("vendor_return");
        checkBoxInvoke("customer_return");

    }

    private ArrayList<String> checkEmpFields() {

        ArrayList<String> err = new ArrayList<>();
        if (emp_name.getText().isEmpty()) {
            err.add(jLabel_1_5.getText());
        }
        if (emp_mob.getText().isEmpty()) {
            err.add(jLabel_1_7.getText());
        }
        if (emp_company.getText().isEmpty()) {
            err.add(jLabel_1_4.getText());
        }
        if (emp_password.getText().isEmpty()) {
            err.add(jLabel_1_9.getText());
        }
        if (emp_typeList.getSelectedItem().toString().isEmpty()) {
            err.add(jLabel_1_3.getText());
        }
        return err;
    }

    private final String INSERT = "insert";
    private final String UPDATE = "update";
    private final String SEARCH = "search";

    private void addPrivileges(String st) {
        try {

            ArrayList<Privileges> pList = new ArrayList<>();
            if (st.equals("update")) {

                Criteria c = EXTCLASS.getHibSession().createCriteria(Privileges.class);
                c.add(Restrictions.eq("employee", employee));

                if (!c.list().isEmpty()) {

                    List<Privileges> list = c.list();

                    for (Privileges privileges : list) {

                        if (privileges.getUiName().equals("Stock")) {
                            //stock
                            if (privileges.getAction().equals(INSERT)) {
                                //stock_i

                                if (stock_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {
                                //stock_u

                                if (stock_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {
                                //stock_d
                                if (stock_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }
                            }

                        }

                        if (privileges.getUiName().equals("GRN")) {

                            //GRN
                            if (privileges.getAction().equals(INSERT)) {

                                if (grn_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (grn_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (grn_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }
                            }

                        }

                        if (privileges.getUiName().equals("Unit")) {

                            //Unit
                            if (privileges.getAction().equals(INSERT)) {

                                if (unit_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (unit_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (unit_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Product")) {

                            //Product
                            if (privileges.getAction().equals(INSERT)) {

                                if (product_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (product_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (product_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Product_type")) {

                            //Product_type
                            if (privileges.getAction().equals(INSERT)) {

                                if (product_type_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (product_type_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (product_type_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }
                            }

                        }

                        if (privileges.getUiName().equals("Company")) {

                            //Company
                            if (privileges.getAction().equals(INSERT)) {

                                if (company_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (company_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (company_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Vendor")) {

                            //Vendor
                            if (privileges.getAction().equals(INSERT)) {

                                if (vendor_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (vendor_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (vendor_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Supplier")) {

                            //Supplier
                            if (privileges.getAction().equals(INSERT)) {

                                if (supplier_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }
                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (supplier_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (supplier_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }
                            }

                        }

                        if (privileges.getUiName().equals("Vendor_POS")) {

                            //Vendor_POS
                            if (privileges.getAction().equals(INSERT)) {

                                if (vendor_POS_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (vendor_POS_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (vendor_POS_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Customer_POS")) {

                            //Customer_POS
                            if (privileges.getAction().equals(INSERT)) {

                                if (customer_POS_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (customer_POS_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (customer_POS_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Vendor_return")) {

                            //Vendor_return
                            if (privileges.getAction().equals(INSERT)) {

                                if (vendor_return_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (vendor_return_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (vendor_return_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }

                        if (privileges.getUiName().equals("Customer_return")) {

                            //Customer_return
                            if (privileges.getAction().equals(INSERT)) {

                                if (customer_return_i.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(UPDATE)) {

                                if (customer_return_u.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }
                            if (privileges.getAction().equals(SEARCH)) {

                                if (customer_return_s.isSelected()) {
                                    privileges.setState(true);
                                } else {
                                    privileges.setState(false);

                                }

                            }

                        }
                        EXTCLASS.getHibSession().update(privileges);

                    }

                }
            }
            //Stock
            if (stock_i.isSelected()) {
                Privileges p = new Privileges(employee, "Stock", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Stock", INSERT, false, "active");
                pList.add(p);
            }
            if (stock_u.isSelected()) {
                Privileges p = new Privileges(employee, "Stock", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Stock", UPDATE, false, "active");
                pList.add(p);
            }
            if (stock_s.isSelected()) {
                Privileges p = new Privileges(employee, "Stock", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Stock", SEARCH, false, "active");
                pList.add(p);
            }

            //GRN
            if (grn_i.isSelected()) {
                Privileges p = new Privileges(employee, "GRN", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "GRN", INSERT, false, "active");
                pList.add(p);
            }
            if (grn_u.isSelected()) {
                Privileges p = new Privileges(employee, "GRN", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "GRN", UPDATE, false, "active");
                pList.add(p);

            }
            if (grn_s.isSelected()) {
                Privileges p = new Privileges(employee, "GRN", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "GRN", SEARCH, false, "active");
                pList.add(p);

            }

            //Unit
            if (unit_i.isSelected()) {
                Privileges p = new Privileges(employee, "Unit", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Unit", INSERT, false, "active");
                pList.add(p);
            }
            if (unit_u.isSelected()) {
                Privileges p = new Privileges(employee, "Unit", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Unit", UPDATE, false, "active");
                pList.add(p);

            }
            if (unit_s.isSelected()) {
                Privileges p = new Privileges(employee, "Unit", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Unit", SEARCH, false, "active");
                pList.add(p);

            }

            //Product
            if (product_i.isSelected()) {
                Privileges p = new Privileges(employee, "Product", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Product", INSERT, false, "active");
                pList.add(p);
            }
            if (product_u.isSelected()) {
                Privileges p = new Privileges(employee, "Product", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Product", UPDATE, false, "active");
                pList.add(p);

            }
            if (product_s.isSelected()) {
                Privileges p = new Privileges(employee, "Product", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Product", SEARCH, false, "active");
                pList.add(p);

            }

            //Product_type
            if (product_type_i.isSelected()) {
                Privileges p = new Privileges(employee, "Product_type", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Product_type", INSERT, false, "active");
                pList.add(p);
            }
            if (product_type_u.isSelected()) {
                Privileges p = new Privileges(employee, "Product_type", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Product_type", UPDATE, false, "active");
                pList.add(p);

            }
            if (product_type_s.isSelected()) {
                Privileges p = new Privileges(employee, "Product_type", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Product_type", SEARCH, false, "active");
                pList.add(p);

            }

            //Company
            if (company_i.isSelected()) {
                Privileges p = new Privileges(employee, "Company", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Company", INSERT, false, "active");
                pList.add(p);
            }
            if (company_u.isSelected()) {
                Privileges p = new Privileges(employee, "Company", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Company", UPDATE, false, "active");
                pList.add(p);
            }
            if (company_s.isSelected()) {
                Privileges p = new Privileges(employee, "Company", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Company", SEARCH, false, "active");
                pList.add(p);

            }

            //Vendor
            if (vendor_i.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor", INSERT, false, "active");
                pList.add(p);
            }
            if (vendor_u.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor", UPDATE, false, "active");
                pList.add(p);
            }
            if (vendor_s.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor", SEARCH, false, "active");
                pList.add(p);

            }

            //Supplier
            if (supplier_i.isSelected()) {
                Privileges p = new Privileges(employee, "Supplier", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Supplier", INSERT, false, "active");
                pList.add(p);
            }
            if (supplier_u.isSelected()) {
                Privileges p = new Privileges(employee, "Supplier", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Supplier", UPDATE, false, "active");
                pList.add(p);
            }
            if (supplier_s.isSelected()) {
                Privileges p = new Privileges(employee, "Supplier", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Supplier", SEARCH, false, "active");
                pList.add(p);

            }

            //Vendor_POS
            if (vendor_POS_i.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor_POS", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor_POS", INSERT, false, "active");
                pList.add(p);
            }
            if (vendor_POS_u.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor_POS", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor_POS", UPDATE, false, "active");
                pList.add(p);
            }
            if (vendor_POS_s.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor_POS", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor_POS", SEARCH, false, "active");
                pList.add(p);

            }

            //Customer_POS
            if (customer_POS_i.isSelected()) {
                Privileges p = new Privileges(employee, "Customer_POS", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Customer_POS", INSERT, false, "active");
                pList.add(p);
            }
            if (customer_POS_u.isSelected()) {
                Privileges p = new Privileges(employee, "Customer_POS", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Customer_POS", UPDATE, false, "active");
                pList.add(p);
            }
            if (customer_POS_s.isSelected()) {
                Privileges p = new Privileges(employee, "Customer_POS", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Customer_POS", SEARCH, false, "active");
                pList.add(p);

            }

            //Vendor_return
            if (vendor_return_i.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor_return", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor_return", INSERT, false, "active");
                pList.add(p);
            }
            if (vendor_return_u.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor_return", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor_return", UPDATE, false, "active");
                pList.add(p);
            }
            if (vendor_return_s.isSelected()) {
                Privileges p = new Privileges(employee, "Vendor_return", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Vendor_return", SEARCH, false, "active");
                pList.add(p);

            }

            //Customer_return
            if (customer_return_i.isSelected()) {
                Privileges p = new Privileges(employee, "Customer_return", INSERT, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Customer_return", INSERT, false, "active");
                pList.add(p);
            }
            if (customer_return_u.isSelected()) {
                Privileges p = new Privileges(employee, "Customer_return", UPDATE, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Customer_return", UPDATE, false, "active");
                pList.add(p);
            }
            if (customer_return_s.isSelected()) {
                Privileges p = new Privileges(employee, "Customer_return", SEARCH, true, "active");
                pList.add(p);
            } else {
                Privileges p = new Privileges(employee, "Customer_return", SEARCH, false, "active");
                pList.add(p);

            }

            if (st.equals("save")) {

                for (Privileges privileges : pList) {
                    EXTCLASS.getHibSession().save(privileges);
                }

            }

            Transaction t = EXTCLASS.getHibSession().beginTransaction();
            t.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadEmpTbl(Criteria c) {

        try {

            if (!c.list().isEmpty()) {

                DefaultTableModel dtm = (DefaultTableModel) empAllList.getModel();
                dtm.setRowCount(0);
                List<Employee> list = c.list();

                for (Employee e : list) {
                    Vector v = new Vector();
                    v.add(e.getIdemployee());
                    v.add(e.getName());
                    v.add(e.getMyCompanyDetails().getName());
                    v.add(e.getEmployeeType().getType());
                    v.add(e.getEmail());
                    v.add(e.getMobile());
                    v.add(e.getStatus());
                    dtm.addRow(v);
                }

            }

        } catch (Exception e) {

            e.printStackTrace();

        }

    }

    private void changeEMPState(String st) {

        Criteria c = EXTCLASS.getHibSession().createCriteria(Employee.class
        );
        c.add(Restrictions.eq("status", st));
        loadEmpTbl(c);

    }

    private void selectCheckBoxes() {

        try {

            Criteria p = EXTCLASS.getHibSession().createCriteria(Privileges.class
            );
            p.add(Restrictions.eq("employee", employee));
            p.add(Restrictions.eq("status", "active"));
            if (!p.list().isEmpty()) {

                List<Privileges> list = p.list();

                int stockFound = 0;
                int grnFound = 0;
                int unitFound = 0;
                int productFound = 0;
                int product_typeFound = 0;
                int companyFound = 0;
                int vendorFound = 0;
                int supplierFound = 0;
                int ven_posFound = 0;
                int customer_posFound = 0;
                int vendor_returnFound = 0;
                int customer_returnFound = 0;

                for (Privileges privileges : list) {

                    if (privileges.getUiName().equals("Stock")) {

                        //stock
                        if (privileges.getAction().equals(INSERT)) {
                            //stock_i

                            if (privileges.getState()) {
                                stock_i.setSelected(true);
                                stockFound++;
                            } else {
                                stock_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {
                            //stock_u

                            if (privileges.getState()) {
                                stock_u.setSelected(true);
                                stockFound++;
                            } else {
                                stock_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {
                            //stock_d

                            if (privileges.getState()) {
                                stock_s.setSelected(true);
                                stockFound++;
                            } else {
                                stock_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("GRN")) {

                        //GRN
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                grn_i.setSelected(true);
                                grnFound++;
                            } else {
                                grn_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                grn_u.setSelected(true);
                                grnFound++;
                            } else {
                                grn_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                grn_s.setSelected(true);
                                grnFound++;
                            } else {
                                grn_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Unit")) {

                        //Unit
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                unit_i.setSelected(true);
                                unitFound++;
                            } else {
                                unit_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                unit_u.setSelected(true);
                                unitFound++;
                            } else {
                                unit_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                unit_s.setSelected(true);
                                unitFound++;
                            } else {
                                unit_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Product")) {

                        //Product
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                product_i.setSelected(true);
                                productFound++;
                            } else {
                                product_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                product_u.setSelected(true);
                                productFound++;
                            } else {
                                product_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                product_s.setSelected(true);
                                productFound++;
                            } else {
                                product_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Product_type")) {

                        //Product_type
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                product_type_i.setSelected(true);
                                product_typeFound++;
                            } else {
                                product_type_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                product_type_u.setSelected(true);
                                product_typeFound++;
                            } else {
                                product_type_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                product_type_s.setSelected(true);
                                product_typeFound++;
                            } else {
                                product_type_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Company")) {

                        //Company
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                company_i.setSelected(true);
                                companyFound++;
                            } else {
                                company_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                company_u.setSelected(true);
                                companyFound++;
                            } else {
                                company_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                company_s.setSelected(true);
                                companyFound++;
                            } else {
                                company_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Vendor")) {

                        //Vendor
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                vendor_i.setSelected(true);
                                vendorFound++;
                            } else {
                                vendor_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                vendor_u.setSelected(true);
                                vendorFound++;
                            } else {
                                vendor_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                vendor_s.setSelected(true);
                                vendorFound++;
                            } else {
                                vendor_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Supplier")) {

                        //Supplier
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                supplier_i.setSelected(true);
                                supplierFound++;
                            } else {
                                supplier_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                supplier_u.setSelected(true);
                                supplierFound++;
                            } else {
                                supplier_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                supplier_s.setSelected(true);
                                supplierFound++;
                            } else {
                                supplier_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Vendor_POS")) {

                        //Vendor_POS
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                vendor_POS_i.setSelected(true);
                                ven_posFound++;
                            } else {
                                vendor_POS_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                vendor_POS_u.setSelected(true);
                                ven_posFound++;
                            } else {
                                vendor_POS_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                vendor_POS_s.setSelected(true);
                                ven_posFound++;
                            } else {
                                vendor_POS_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Customer_POS")) {

                        //Customer_POS
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                customer_POS_i.setSelected(true);
                                customer_posFound++;
                            } else {
                                customer_POS_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                customer_POS_u.setSelected(true);
                                customer_posFound++;
                            } else {
                                customer_POS_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                customer_POS_s.setSelected(true);
                                customer_posFound++;
                            } else {
                                customer_POS_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Vendor_return")) {

                        //Vendor_return
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                vendor_return_i.setSelected(true);
                                vendor_returnFound++;
                            } else {
                                vendor_return_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                vendor_return_u.setSelected(true);
                                vendor_returnFound++;
                            } else {
                                vendor_return_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                vendor_return_s.setSelected(true);
                                vendor_returnFound++;
                            } else {
                                vendor_return_s.setSelected(false);

                            }

                        }

                    }

                    if (privileges.getUiName().equals("Customer_return")) {

                        //Customer_return
                        if (privileges.getAction().equals(INSERT)) {

                            if (privileges.getState()) {
                                customer_return_i.setSelected(true);
                                customer_returnFound++;
                            } else {
                                customer_return_i.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(UPDATE)) {

                            if (privileges.getState()) {
                                customer_return_u.setSelected(true);
                                customer_returnFound++;
                            } else {
                                customer_return_u.setSelected(false);

                            }

                        }
                        if (privileges.getAction().equals(SEARCH)) {

                            if (privileges.getState()) {
                                customer_return_s.setSelected(true);
                                customer_returnFound++;
                            } else {
                                customer_return_s.setSelected(false);

                            }

                        }

                    }
                }

                System.out.println(stockFound);
                if (stockFound != 0) {
                    stock.setSelected(true);
                } else {
                    stock.setSelected(false);

                    stock_i.setEnabled(false);
                    stock_u.setEnabled(false);
                    stock_s.setEnabled(false);
                }

                if (grnFound != 0) {
                    grn.setSelected(true);
                } else {

                    grn.setSelected(false);

                    grn_i.setEnabled(false);
                    grn_u.setEnabled(false);
                    grn_s.setEnabled(false);
                }

                if (unitFound != 0) {

                    unit.setSelected(true);
                } else {

                    unit.setSelected(false);

                    unit_i.setEnabled(false);
                    unit_u.setEnabled(false);
                    unit_s.setEnabled(false);

                }

                if (productFound != 0) {

                    product.setSelected(true);
                } else {
                    product.setSelected(false);

                    product_i.setEnabled(false);
                    product_u.setEnabled(false);
                    product_s.setEnabled(false);
                }

                if (product_typeFound != 0) {

                    product_type.setSelected(true);
                } else {
                    product_type.setSelected(false);

                    product_type_i.setEnabled(false);
                    product_type_u.setEnabled(false);
                    product_type_s.setEnabled(false);

                }

                if (companyFound != 0) {

                    company.setSelected(true);
                } else {
                    company.setSelected(false);

                    company_i.setEnabled(false);
                    company_u.setEnabled(false);
                    company_s.setEnabled(false);

                }

                if (vendorFound != 0) {
                    vendor.setSelected(true);
                } else {

                    vendor.setSelected(false);

                    vendor_i.setEnabled(false);
                    vendor_u.setEnabled(false);
                    vendor_s.setEnabled(false);
                }

                if (supplierFound != 0) {

                    supplier.setSelected(true);
                } else {
                    supplier.setSelected(false);

                    supplier_i.setEnabled(false);
                    supplier_u.setEnabled(false);
                    supplier_s.setEnabled(false);

                }

                if (ven_posFound != 0) {

                    vendor_POS.setSelected(true);
                } else {

                    vendor_POS.setSelected(false);

                    vendor_POS_i.setEnabled(false);
                    vendor_POS_u.setEnabled(false);
                    vendor_POS_s.setEnabled(false);
                }

                if (customer_posFound != 0) {

                    customer_POS.setSelected(true);
                } else {
                    customer_POS.setSelected(false);

                    customer_POS_i.setEnabled(false);
                    customer_POS_u.setEnabled(false);
                    customer_POS_s.setEnabled(false);
                }

                if (vendor_returnFound != 0) {

                    vendor_return.setSelected(true);
                } else {
                    vendor_return.setSelected(false);

                    vendor_return_i.setEnabled(false);
                    vendor_return_u.setEnabled(false);
                    vendor_return_s.setEnabled(false);

                }

                if (customer_returnFound != 0) {
                    customer_return.setSelected(true);
                } else {
                    customer_return.setSelected(false);

                    customer_return_i.setEnabled(false);
                    customer_return_u.setEnabled(false);
                    customer_return_s.setEnabled(false);

                }

            }

        } catch (Exception e) {
            e.printStackTrace();

        }

    }

    public static class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setFont(new Font("Nirmala UI", Font.BOLD, 20));
            setOpaque(true);

        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            setText(value.toString());
            setBackground(new Color(70, 45, 70));
            setForeground(Color.white);
            return this;
        }

    }
}
